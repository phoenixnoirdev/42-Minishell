Source :

- https://github.com/Hqndler/42-minishell
- https://codesandbox.io/s/gaspachowminishell-42-04ns1?file=/main.c
- https://medium.com/@abkabex/minishell-42-f680eadde592
- http://i.paysdu42.fr/?page=minishell.c
- https://m4nnb3ll.medium.com/minishell-building-a-mini-bash-a-42-project-b55a10598218
- https://harm-smits.github.io/42docs/projects/minishell
- https://www.gnu.org/savannah-checkouts/gnu/bash/manual/
- https://www.codequoi.com/envoyer-et-intercepter-un-signal-en-c/
- https://github.com/LucieLeBriquer/minishell?tab=readme-ov-file#ressources
- https://medium.com/@mostafa.omrane/mes-conseils-si-je-devais-recommencer-minishell-a9783c51ba1b


<<<<<<< HEAD
=======
kjsafbkljsjkln


>>>>>>> c82e8aa (test 3)
******************************************************************************
Liste des Built-ins à Implémenter

    echo
        Affiche un message à l'écran.
        Option importante à gérer : -n (qui supprime le retour à la ligne).
        Exemple : echo -n "Hello, world!"

    cd
        Change le répertoire courant.
        Gère les chemins relatifs et absolus.
        Exemple : cd /home/user ou cd ../

    pwd
        Affiche le répertoire courant.
        Aucune option spécifique à gérer.
        Exemple : pwd

    export
        Ajoute ou met à jour une variable d'environnement.
        Exemple : export VAR=value
        Si aucune variable n'est spécifiée, affiche la liste des variables exportées.

    unset
        Supprime une variable d'environnement.
        Exemple : unset VAR

    env
        Affiche les variables d'environnement.
        Exemple : env
        Il ne faut pas implémenter d'options pour cette commande.

    exit
        Quitte le shell avec un code de retour optionnel.
        Exemple : exit ou exit 42
        Gère aussi les erreurs comme des arguments non numériques.
******************************************************************************



******************************************************************************
Signaux à Gérer

    Ctrl+C (SIGINT) :
        Interrompt l'exécution de la commande en cours. Dans un shell classique,
        cela devrait seulement afficher un nouveau prompt sans quitter le shell.

    Ctrl+D (EOF) :
        En général, cela signifie la fin de l’entrée (EOF) et devrait fermer le
        shell si on se trouve au prompt principal.

    Ctrl+\ (SIGQUIT) :
        Dans Bash, cela provoque l’affichage de Quit (core dumped) si une
        commande est en cours d’exécution, mais ne fait rien au prompt principal.
******************************************************************************


******************************************************************************
Fonction env

Chaque instance de bash travail qvec sa copie des veriables d'environnement
******************************************************************************


******************************************************************************
Fonction unset

bash$ unset					= Ne renvoie aucun message
bash$ unset TOTO			= Suprime la variable TOTO, ne renvoie aucun message
bash$ unset TO				= Ne suprime aucune variable, ne renvoie aucun message
******************************************************************************


******************************************************************************
Commande a tester: 

- cat < fic | sleep 5 | wc -l > out
commande s'execute mais retourn 0

- cat | cat | cat | ls
renvoie ls puis attend aue l'on saisie un texte

- cd -
remonte de 1 dossier et qffiche le pqth
******************************************************************************



